axios is a JS library
it helps to make request from browser

axios(config)
axios(url [, config])
axios.post(url [, config])
axios.put(url [, config])
axios.patch(url [, config])
axios.delete(url [, config])

axios returns response object -
data, status, statusText, headers, config

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js" integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</head>

axios.get('https://jsonplaceholder.typicode.com/posts/101').then(res=>console.log(res.data)).catch(err=>console.log(err));

axios.post('https://jsonplaceholder.typicode.com/posts/', {
  body: JSON.stringify({
    title: 'foo',
    body: 'bar',
    userId: 1,
  }),}).then(res=>console.log(res.data)).catch(err=>console.log(err));

axios.put('https://jsonplaceholder.typicode.com/posts/1', {
  body: JSON.stringify({
    id: 1,
    title: 'fooma',
    body: 'barma',
    userId: 1,
  }),}).then(res=>console.log(res.data)).catch(err=>console.log(err));

axios.patch('https://jsonplaceholder.typicode.com/posts/1', {
body: JSON.stringify({
  body: 'barmaman',
}),}).then(res=>console.log(res.data)).catch(err=>console.log(err));

axios.delete('https://jsonplaceholder.typicode.com/posts/1').then(res=>console.log(res.data)).catch(err=>console.log(err));

// using async await
const makeRequest = async (config) => {
  return await axios(config);
}

const getData = () => {
  makeRequest('https://jsonplaceholder.typicode.com/posts/1').then(res=>console.log(res)).catch(err=>console.log(err));
}

getData();

const createData = () => {
  makeRequest({
    url:'https://jsonplaceholder.typicode.com/posts/',
    method:'post',
    data: JSON.stringify({
      title: 'foo',
      body: 'bar',
      userId: 1,
    })}).then(res=>console.log(res)).catch(err=>console.log(err));
}

createData();

const updateData = () => {
  makeRequest({
    url:'https://jsonplaceholder.typicode.com/posts/1',
    method:'put',
    data: JSON.stringify({
      id: 1,
      title: 'fooma',
      body: 'barma',
      userId: 1,
    })}).then(res=>console.log(res.data)).catch(err=>console.log(err));
}

const deleteData = () => {
  makeRequest({
    url:'https://jsonplaceholder.typicode.com/posts/1',
    method:'delete'
    }).then(res=>console.log(res.data)).catch(err=>console.log(err));
}

updateData();